<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                            http://www.springframework.org/schema/context    
                            http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                            http://www.springframework.org/schema/mvc    
                            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.ad.controller" />

    <!-- 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的 -->
    <!-- 指定自己定义的validator -->
    <mvc:annotation-driven validator="validator"/>
    <mvc:resources location="/css/" mapping="/css/**"/>
    <mvc:resources location="/js/" mapping="/js/**"/>
    <mvc:resources location="/images/" mapping="/images/**"/>
    <mvc:resources location="/resources/css/" mapping="/resources/css/**"/>
    <mvc:resources location="/resources/js/" mapping="/resources/js/**"/>
    <mvc:resources location="/resources/img/" mapping="/resources/img/**"/>
    <mvc:resources location="/resources/images/" mapping="/resources/images/**"/>
    <mvc:resources location="/resources/ckeditor/" mapping="/resources/ckeditor/**"/>
    <mvc:resources location="/resources/messenger/" mapping="/resources/messenger/**"/>
    <mvc:resources location="/" mapping="/**/*.jpg"/>
    <mvc:resources location="/" mapping="/**/*.html"/>

    <!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!--如果不加默认到 使用classpath下的 ValidationMessages.properties
        <property name="validationMessageSource" ref="messageSource"/>-->
    </bean>

    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
            </list>
        </property>
    </bean>
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>

    <!--管理员端session验证地址 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/stage/**" />
            <bean class="com.ad.Interceptor.UserInterceptor">
                <property name="allowUrls">
                    <list>
                        <value>/stage/adLibrary</value>
                        <value>/stage/loginUI</value>
                        <value>/stage/login</value>
                        <value>/stage/registerUI</value>
                        <value>/stage/register</value>
                        <value>/stage/check</value>
                        <value>/stage/checkAccount</value>
                    </list>
                </property>
            </bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/admin/**" />
            <bean class="com.ad.Interceptor.AdminInterceptor">
                <property name="allowUrls">
                    <list>
                        <value>/admin/admin/loginUI</value>
                        <value>/admin/admin/login</value>
                        <value>/admin/admin/registerUI</value>
                        <value>/admin/admin/register</value>
                        <value>/admin/admin/checkAccount</value>
                        <value>/admin/admin/check</value>
                    </list>
                </property>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>
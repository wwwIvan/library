<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ad.dao.BookMapper">
    <!--用户、图书多对多映射-->
    <resultMap id="bookUserResultMap" type="com.ad.model.Book">
        <id column="b_id" property="b_id"/>
        <result column="name" property="name"/>
        <result column="author" property="author"/>
        <result column="publication_date" property="publication_date"/>
        <result column="intro" property="intro"/>
        <result column="picture" property="picture"/>
        <collection property="users" ofType="com.ad.model.User">
            <id property="u_id" column="u_id"/>
            <result column="account" property="account"/>
            <result column="password" property="password"/>
            <result column="userName" property="userName"/>
            <result column="idCard" property="idCard"/>
            <result column="existing" property="existing"/>
        </collection>
    </resultMap>
    <!-- 图书和图书类型多对一配置 -->
    <resultMap id="bookResultMap" type="com.ad.model.Book">
            <id column="b_id" property="b_id"/>
            <result column="name" property="name"/>
            <result column="author" property="author"/>
            <result column="publication_date" property="publication_date"/>
            <result column="intro" property="intro"/>
            <result column="picture" property="picture"/>
            <association property="bookType" javaType="com.ad.model.BookType">
                <id column="bt_id" property="bt_id"/>
                <result column="name" property="name"/>
                <result column="picture" property="picture"/>
            </association>
    </resultMap>
    <select id="selectBookFetchBookType" parameterType="Long" resultMap="bookResultMap">
        SELECT bt.*,b.* FROM booktype bt,book b WHERE b.b_id = #{b_id} AND bt.bt_id = b.bt_id
    </select>
    <select id="selectBookByForeignKey" parameterType="Long" resultType="com.ad.model.Book">
        SELECT * FROM book WHERE bt_id = #{bt_id}
    </select>
    <insert id="add" parameterType="com.ad.model.Book">
        INSERT INTO book(b_id,name,bt_id,intro,author,publication_date,picture)
        VALUES (#{b_id},#{name},#{bt_id},#{intro},#{author},#{publication_date},#{picture})
    </insert>
    <update id="update" parameterType="com.ad.model.Book">
        UPDATE book SET
        name = #{name},
        bt_id = #{bt_id},
        intro = #{intro}
        <if test="picture != null">
            ,picture = #{picture},
        </if>
        publication_date = #{publication_date},
        author = #{author}
        WHERE b_id = #{b_id}
    </update>
    <delete id="deleteByForeignKey" parameterType="Long">
    DELETE FROM book WHERE bt_id=#{bt_id}
  </delete>
    <!-- 类型分页SQL语句 -->
    <select id="selectTypeBooksByPage" resultType="com.ad.model.Book">
        select * from book WHERE bt_id = #{2} limit #{0},#{1}
    </select>
    <!-- 分页SQL语句 -->
    <select id="selectBooksByPage" resultType="com.ad.model.Book">
        select * from book limit #{0},#{1}
    </select>
    <!-- 类型分页：取得记录的总数 -->
    <select id="getBooksCount" resultType="Long" parameterType="Long">
        SELECT COUNT(*) FROM book WHERE bt_id = #{bt_id}
    </select>
    <!-- 取得记录的总数 -->
    <select id="getTypeBooksCount" resultType="Long" >
        SELECT COUNT(*) FROM book
    </select>
    <update id="cutExisting" parameterType="String">
        UPDATE book SET existing=existing-1 WHERE b_id = #{b_id}
    </update>
    <update id="addExisting" parameterType="String">
        UPDATE book SET existing=existing+1 WHERE b_id = #{b_id}
    </update>
</mapper>